# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                           					controllers.HomeController.index
# An example controller showing how to use dependency injection
GET     /count                      					controllers.CountController.count
# An example controller showing how to write asynchronous code
GET     /message                    					controllers.AsyncController.message

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               					controllers.Assets.versioned(path="/public", file: Asset)

GET     /login                     						controllers.HomeController.login(dialCode: Integer ?= 0, mobile: String ?= "", password: String ?= "")
GET     /signup           								controllers.HomeController.signup(dialCode: Integer ?= 0, mobile: String ?= "", password: String ?= "")
GET     /verify                    						controllers.HomeController.verifyMobile(dialCode: Integer ?= 0, mobile: String ?= "", verifyCode: Integer ?= 0)
GET     /logout                     					controllers.HomeController.logout

GET     /broadcast/lesson/session                		controllers.LessonController.broadcastLessonSession(lessonSessionId: Long ?= 0)
POST    /broadcast/info               					controllers.LessonController.getBroadcastInfo
GET     /broadcast/lessonSession/join                	controllers.LessonController.joinLessonSession(lessonSessionId: Long ?= 0)
POST    /broadcast/lesson/archive						controllers.LessonController.openTokCallback
POST    /create                							controllers.LessonController.createLesson
GET     /edit                							controllers.LessonController.editLesson(lessonId: Long ?= 0)
POST    /lesson/basic/save                				controllers.LessonController.saveLessonBasicInfo
GET     /lesson/image                					controllers.LessonController.editLessonImages(lessonId: Long ?= 0)
POST    /lesson/upload/image                			controllers.LessonController.uploadLessonImage
GET     /lesson/show/image                				controllers.LessonController.showLessonImage(uuid: String ?= "", isLarge: Boolean ?= false)
GET  	/lesson/show/cover                          	controllers.LessonController.showLessonCover(lessonId: Long ?= 0, isLarge: Boolean ?= false)
POST    /lesson/delete/image                			controllers.LessonController.deleteLessonImage
POST    /lesson/update/image/info                		controllers.LessonController.updateLessonImageInfo
GET     /lesson/session                					controllers.LessonController.lessonSession(lessonId: Long ?= 0, offset: Integer ?= 0)
POST    /lesson/session/save                			controllers.LessonController.saveLessonSession
POST	/lesson/sessions								controllers.LessonController.lessonSessions
GET     /lesson                							controllers.LessonController.lessonDetail(lessonId: Long ?= 0)
POST 	/lesson/publish/category						controllers.LessonController.pubishedLessonsByCategory
GET     /lesson/price                					controllers.LessonController.lessonPrice(lessonId: Long ?= 0)
POST    /lesson/price/save                				controllers.LessonController.saveLessonPrice
POST    /lesson/publish              					controllers.LessonController.publishLesson

GET 	/lesson/file/management							controllers.FileController.fileManagement(lessonId: Long ?= 0, offset: Integer ?= 0)
POST 	/lesson/file/upload								controllers.FileController.uploadMediaFile
GET     /lesson/file/download                			controllers.FileController.downloadFile(mediaFileUUID: String ?= "")
POST    /lesson/file/delete                				controllers.FileController.deleteFile


GET     /profile/personal                				controllers.ProfileController.personalProfile
POST    /profile/update/personal                		controllers.ProfileController.updatePersonalProfile
GET    	/profile/personal/main                			controllers.ProfileController.personalMain
POST    /profile/upload/avatar                			controllers.ProfileController.uploadAvatar
POST    /profile/add/favorite/lesson                	controllers.ProfileController.addFavoriteLesson
GET     /profile/show/avatar/thumbnail               	controllers.ProfileController.showAvatarThumbnail(thumbnailUUID: String ?= "")
GET		/profile/avatar									controllers.ProfileController.showAvatar(userId: Long ?= 0, isLarge: Boolean ?= false)
GET     /profile/teacher/agreement                		controllers.ProfileController.readTeacherAgreement
GET     /profile/teacher/settle                			controllers.ProfileController.teacherSettle
POST    /profile/teacher/submit                			controllers.ProfileController.submitTeacherInfo
POST    /profile/teacher/update                			controllers.ProfileController.updateTeacherInfo
GET     /profile/settle/review                			controllers.ProfileController.settleReview
GET     /profile/teacher                				controllers.ProfileController.teacherDetail(userId: Long ?= 0)
GET     /profile/lesson/list                			controllers.ProfileController.myLessons(offset: Integer ?= 0)
GET		/profile/register/lesson/list					controllers.ProfileController.myRegisteredLessons
GET		/profile/favorite/lesson						controllers.ProfileController.myFavoriteLessons(offset: Integer ?= 0)
POST	/profile/remove/favorite/						controllers.ProfileController.removeFavoriteLesson


GET		/payment/review									controllers.PaymentController.paymentReview(lessonId: Long ?= 0)
POST	/payment/submit									controllers.PaymentController.submitCardInfo
GET 	/payment/request/paypal							controllers.PaymentController.requestPaypal(lessonId: Long ?= 0)
GET 	/payment/execute								controllers.PaymentController.executePaypal(userId: Long ?= 0, lessonId: Long ?= 0)


POST 	/comment/create									controllers.CommentController.createComment
POST 	/lesson/comments								controllers.CommentController.commentsByLesson()



GET     /api/joinLesson             					controllers.api.LessonController.joinLesson











